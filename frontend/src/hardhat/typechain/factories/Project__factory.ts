/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Project } from "../Project";

export class Project__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _goal: BigNumberish,
    _charityName: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Project> {
    return super.deploy(
      _goal,
      _charityName,
      _description,
      overrides || {}
    ) as Promise<Project>;
  }
  getDeployTransaction(
    _goal: BigNumberish,
    _charityName: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _goal,
      _charityName,
      _description,
      overrides || {}
    );
  }
  attach(address: string): Project {
    return super.attach(address) as Project;
  }
  connect(signer: Signer): Project__factory {
    return super.connect(signer) as Project__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Project {
    return new Contract(address, _abi, signerOrProvider) as Project;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_charityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfProject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charityAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charityName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfDonors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFunded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_charityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "setProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_update",
        type: "string",
      },
    ],
    name: "setUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDonated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "update",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eda38038062000eda833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82516401000000008111828201881017156200014257600080fd5b82525081516020918201929091019080838360005b838110156200017157818101518382015260200162000157565b50505050905090810190601f1680156200019f5780820380516001836020036101000a031916815260200191505b5060405250508251620001bb91506000906020850190620001f9565b508051620001d1906001906020840190620001f9565b5050600480546001600160a01b0319163317905550600a805460ff1916905560035562000295565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023c57805160ff19168380011785556200026c565b828001600101855582156200026c579182015b828111156200026c5782518255916020019190600101906200024f565b506200027a9291506200027e565b5090565b5b808211156200027a57600081556001016200027f565b610c3580620002a56000396000f3fe6080604052600436106100f35760003560e01c80637c654303116100905780637c6543031461039857806387cb3540146103ad578063a2e62045146103c2578063ac62f566146103d7578063afcf2fc41461041d578063c2b6b58c14610432578063cc6cb19a14610447578063e4d23f991461047a578063ed88c68e1461052b578063f441b1c814610533576100f3565b8062b37044146100f857806312424e3f1461011f5780631da32711146101365780632a87764f1461014b57806336f89bcd14610288578063401938831461031257806354015cc5146103275780635d0341ba1461033c5780637284e41614610383575b600080fd5b34801561010457600080fd5b5061010d610548565b60408051918252519081900360200190f35b34801561012b57600080fd5b5061013461054e565b005b34801561014257600080fd5b5061010d610673565b34801561015757600080fd5b506101346004803603606081101561016e57600080fd5b81359190810190604081016020820135600160201b81111561018f57600080fd5b8201836020820111156101a157600080fd5b803590602001918460018302840111600160201b831117156101c257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561021457600080fd5b82018360208201111561022657600080fd5b803590602001918460018302840111600160201b8311171561024757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610679945050505050565b34801561029457600080fd5b5061029d6106ab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d75781810151838201526020016102bf565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031e57600080fd5b5061010d610739565b34801561033357600080fd5b5061010d61073f565b34801561034857600080fd5b5061036f6004803603602081101561035f57600080fd5b50356001600160a01b0316610743565b604080519115158252519081900360200190f35b34801561038f57600080fd5b5061029d610758565b3480156103a457600080fd5b5061036f6107b2565b3480156103b957600080fd5b5061010d6107bb565b3480156103ce57600080fd5b5061029d6107c1565b3480156103e357600080fd5b50610401600480360360208110156103fa57600080fd5b5035610819565b604080516001600160a01b039092168252519081900360200190f35b34801561042957600080fd5b50610401610840565b34801561043e57600080fd5b5061036f61084f565b34801561045357600080fd5b5061010d6004803603602081101561046a57600080fd5b50356001600160a01b031661085d565b34801561048657600080fd5b506101346004803603602081101561049d57600080fd5b810190602081018135600160201b8111156104b757600080fd5b8201836020820111156104c957600080fd5b803590602001918460018302840111600160201b831117156104ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061086f945050505050565b610134610886565b34801561053f57600080fd5b5061010d6109da565b60095490565b6000805b60065481108015610561575081155b1561059c576006818154811061057357fe5b6000918252602090912001546001600160a01b031633141561059457600191505b600101610552565b50806105ef576040805162461bcd60e51b815260206004820181905260248201527f4f6e6c7920646f6e6f72732063616e2063616c6c2074686973206d6574686f64604482015290519081900360640190fd5b3360009081526007602052604090205460ff1661062d57336000908152600760205260409020805460ff191660019081179091556008805490910190555b600a5460ff1680156106425750600654600854145b15610670576106686040518060600160405280602e8152602001610bd2602e91396109e0565b610670610a86565b50565b60065490565b60038390558151610691906000906020850190610b12565b5080516106a5906001906020840190610b12565b50505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b505050505081565b60035481565b4790565b60076020526000908152604090205460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107315780601f1061070657610100808354040283529160200191610731565b600a5460ff1681565b60085481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156107315780601f1061070657610100808354040283529160200191610731565b6006818154811061082657fe5b6000918252602090912001546001600160a01b0316905081565b6004546001600160a01b031681565b600a54610100900460ff1681565b60056020526000908152604090205481565b8051610882906002906020840190610b12565b5050565b6004546001600160a01b03163314156108d05760405162461bcd60e51b815260040180806020018281038252602c815260200180610ba6602c913960400191505060405180910390fd5b600a5460ff16151560011415610929576040805162461bcd60e51b8152602060048201526019602482015278141c9bda9958dd081a5cc8185b1c9958591e48199d5b991959603a1b604482015290519081900360640190fd5b3360008181526005602052604081208054349081019091556006805460018101825592527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0319169092179091556009805490910190819055600354116109d8576109d06040518060400160405280601981526020017852656c656173696e67206669727374203530252066756e647360381b8152506109e0565b6109d8610a86565b565b60095481565b610670816040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610a24578181015183820152602001610a0c565b50505050905090810190601f168015610a515780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250610af1915050565b6004546009546040516001600160a01b0390921691600290910480156108fc02916000818181858888f19350505050158015610ac6573d6000803e3d6000fd5b50600a5460ff1615610ae257600a805461ff0019166101001790555b600a805460ff19166001179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b5357805160ff1916838001178555610b80565b82800160010185558215610b80579182015b82811115610b80578251825591602001919060010190610b65565b50610b8c929150610b90565b5090565b5b80821115610b8c5760008155600101610b9156fe54686520636861726974792063616e277420646f6e61746520746f2069742773206f776e2070726f6a65637452656c656173696e67206e657874203530252066756e64732065766572796f6e652068617320617070726f766564a2646970667358221220b6e1180cde8dc745251306a3e9c1cb6a4afc4ffdda0845a799cbbc812b6cddf764736f6c63430007030033";
