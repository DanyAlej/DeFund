/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Project } from "../Project";

export class Project__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _goal: BigNumberish,
    _charityName: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Project> {
    return super.deploy(
      _goal,
      _charityName,
      _description,
      overrides || {}
    ) as Promise<Project>;
  }
  getDeployTransaction(
    _goal: BigNumberish,
    _charityName: string,
    _description: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _goal,
      _charityName,
      _description,
      overrides || {}
    );
  }
  attach(address: string): Project {
    return super.attach(address) as Project;
  }
  connect(signer: Signer): Project__factory {
    return super.connect(signer) as Project__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Project {
    return new Contract(address, _abi, signerOrProvider) as Project;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_charityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfProject",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charityAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charityName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfDonors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFunded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_charityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "setProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_update",
        type: "string",
      },
    ],
    name: "setUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDonated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "update",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e6538038062000e65833981810160405260608110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82516401000000008111828201881017156200014257600080fd5b82525081516020918201929091019080838360005b838110156200017157818101518382015260200162000157565b50505050905090810190601f1680156200019f5780820380516001836020036101000a031916815260200191505b5060405250508251620001bb91506000906020850190620001f9565b508051620001d1906001906020840190620001f9565b5050600480546001600160a01b0319163317905550600a805460ff1916905560035562000295565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023c57805160ff19168380011785556200026c565b828001600101855582156200026c579182015b828111156200026c5782518255916020019190600101906200024f565b506200027a9291506200027e565b5090565b5b808211156200027a57600081556001016200027f565b610bc080620002a56000396000f3fe6080604052600436106100e85760003560e01c80637c654303116100855780637c6543031461038d57806387cb3540146103a2578063a2e62045146103b7578063ac62f566146103cc578063afcf2fc414610412578063cc6cb19a14610427578063e4d23f991461045a578063ed88c68e1461050b578063f441b1c814610513576100e8565b8062b37044146100ed57806312424e3f146101145780631da327111461012b5780632a87764f1461014057806336f89bcd1461027d578063401938831461030757806354015cc51461031c5780635d0341ba146103315780637284e41614610378575b600080fd5b3480156100f957600080fd5b50610102610528565b60408051918252519081900360200190f35b34801561012057600080fd5b5061012961052e565b005b34801561013757600080fd5b506101026106a5565b34801561014c57600080fd5b506101296004803603606081101561016357600080fd5b81359190810190604081016020820135600160201b81111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460018302840111600160201b831117156101b757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561020957600080fd5b82018360208201111561021b57600080fd5b803590602001918460018302840111600160201b8311171561023c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106ab945050505050565b34801561028957600080fd5b506102926106dd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102cc5781810151838201526020016102b4565b50505050905090810190601f1680156102f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031357600080fd5b5061010261076b565b34801561032857600080fd5b50610102610771565b34801561033d57600080fd5b506103646004803603602081101561035457600080fd5b50356001600160a01b0316610775565b604080519115158252519081900360200190f35b34801561038457600080fd5b5061029261078a565b34801561039957600080fd5b506103646107e4565b3480156103ae57600080fd5b506101026107ed565b3480156103c357600080fd5b506102926107f3565b3480156103d857600080fd5b506103f6600480360360208110156103ef57600080fd5b503561084b565b604080516001600160a01b039092168252519081900360200190f35b34801561041e57600080fd5b506103f6610872565b34801561043357600080fd5b506101026004803603602081101561044a57600080fd5b50356001600160a01b0316610881565b34801561046657600080fd5b506101296004803603602081101561047d57600080fd5b810190602081018135600160201b81111561049757600080fd5b8201836020820111156104a957600080fd5b803590602001918460018302840111600160201b831117156104ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610893945050505050565b6101296108aa565b34801561051f57600080fd5b506101026109b2565b60095490565b6000805b60065481108015610541575081155b1561057c576006818154811061055357fe5b6000918252602090912001546001600160a01b031633141561057457600191505b600101610532565b50806105cf576040805162461bcd60e51b815260206004820181905260248201527f4f6e6c7920646f6e6f72732063616e2063616c6c2074686973206d6574686f64604482015290519081900360640190fd5b3360009081526007602052604090205460ff1661060d57336000908152600760205260409020805460ff191660019081179091556008805490910190555b61064060405180604001604052806012815260200171417070726f7665642c2072656c656173653f60701b8152506109b8565b600354600954101580156106575750600654600854145b156106a25761069a6040518060400160405280601e81526020017f52656c656173696e672066756e647320636f6e646974696f6e73206d657400008152506109b8565b6106a2610a5e565b50565b60065490565b600383905581516106c3906000906020850190610acb565b5080516106d7906001906020840190610acb565b50505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b820191906000526020600020905b81548152906001019060200180831161074657829003601f168201915b505050505081565b60035481565b4790565b60076020526000908152604090205460ff1681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b600a5460ff1681565b60085481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b6006818154811061085857fe5b6000918252602090912001546001600160a01b0316905081565b6004546001600160a01b031681565b60056020526000908152604090205481565b80516108a6906002906020840190610acb565b5050565b6004546001600160a01b03163314156108f45760405162461bcd60e51b815260040180806020018281038252602c815260200180610b5f602c913960400191505060405180910390fd5b600a5460ff1615156001141561094d576040805162461bcd60e51b8152602060048201526019602482015278141c9bda9958dd081a5cc8185b1c9958591e48199d5b991959603a1b604482015290519081900360640190fd5b3360008181526005602052604081208054349081019091556006805460018101825592527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b031916909217909155600980549091019055565b60095481565b6106a2816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156109fc5781810151838201526020016109e4565b50505050905090810190601f168015610a295780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250610aaa915050565b6004546009546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610a9a573d6000803e3d6000fd5b50600a805460ff19166001179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b0c57805160ff1916838001178555610b39565b82800160010185558215610b39579182015b82811115610b39578251825591602001919060010190610b1e565b50610b45929150610b49565b5090565b5b80821115610b455760008155600101610b4a56fe54686520636861726974792063616e277420646f6e61746520746f2069742773206f776e2070726f6a656374a264697066735822122096761a872bec970084a05f8d1a5fe6a3b148febac14332e59ceec9b0c7ccdcb764736f6c63430007030033";
